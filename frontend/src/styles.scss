/*!
 * Copyright (c) 2014-2021 Bjoern Kimminich & the OWASP Juice Shop contributors.
 * SPDX-License-Identifier: MIT
 */

@import 'theme';

@mixin link-theme($theme) {
  a:link,
  a:visited {
    color: mat-color(map-get($theme, accent), lighter);
    text-decoration: none;
  }

  a:hover,
  a:focus,
  a:active {
    text-decoration: underline;
  }

  a {
    outline: none;
  }
}

@mixin deluxe-membership-theme($theme) {
  .deluxe-membership {
    background: linear-gradient(90deg, mat-color(map-get($theme, primary), 1) 0%, mat-color(map-get($theme, background), card) 100%);
  }
}

@mixin notification-theme($theme) {
  .confirmation {
    color: mat-color(map-get($theme, accent));
  }

  .ribbon::before {
    border: 5px solid mat-color(map-get($theme, accent));
  }

  .ribbon span {
    background-color: mat-color(map-get($theme, accent));
  }

  .error {
    color: mat-color(map-get($theme, warn));
  }

  .ribbon-sold::before {
    border: 5px solid mat-color(map-get($theme, warn));
  }

  .ribbon-sold span {
    background-color: mat-color(map-get($theme, warn));
  }

  .primary-notification {
    background-color: mat-color(map-get($theme, primary), darker);
  }

  .accent-notification {
    background-color: mat-color(map-get($theme, accent), darker);
  }

  .warn-notification {
    background-color: mat-color(map-get($theme, warn), darker);
  }
}

@mixin image-thumbnail-theme($theme) {
  .img-thumbnail {
    background-color: mat-color(map-get($theme, primary), 0.05);
    border: 1px solid mat-color(map-get($theme, primary));
    border-radius: 3px;
    padding: 3px;
  }
}

@mixin score-star-theme($theme) {
  .empty-star {
    stop-color: mat-color(map-get($theme, primary));
  }

  .filled-star {
    stop-color: mat-color(map-get($theme, accent));
  }

  .star-border {
    stroke: mat-color(map-get($theme, accent));
  }
}

@mixin snackbar($theme) {
  .mat-snack-bar-container {
    background-color: mat-color(map-get($theme, background), card) !important;
    color: mat-color(map-get($theme, foreground), text) !important;
  }

  .mat-snack-bar-container.errorBar {
    color: mat-color(map-get($theme, warn)) !important;
  }

  .mat-snack-bar-container.confirmBar {
    color: mat-color(map-get($theme, accent)) !important;
  }
}

@mixin google-button($theme) {
  .google-button {
    background-color: mat-color(map-get($theme, accent), darker) !important;
  }
}

@mixin overlay-theme($theme) {
  .overlay {
    background: mat-color(map-get($theme, primary), darker, 0.7);
  }
}

@mixin custom-components-theme($theme) {
  @include link-theme($theme);
  @include notification-theme($theme);
  @include image-thumbnail-theme($theme);
  @include score-star-theme($theme);
  @include snackbar($theme);
  @include google-button($theme);
  @include deluxe-membership-theme($theme);
  @include overlay-theme($theme);
}

$bg-hacking-instructor: rgba(0, 0, 0, 0.3);

.deeppurple-amber-theme {
  @include angular-material-theme($deeppurple-amber-theme);
  @include custom-components-theme($deeppurple-amber-theme);
}

.indigo-pink-theme {
  @include angular-material-theme($indigo-pink-theme);
  @include custom-components-theme($indigo-pink-theme);
}

.pink-bluegrey-theme {
  @include angular-material-theme($pink-bluegrey-theme);
  @include custom-components-theme($pink-bluegrey-theme);
}

.purple-green-theme {
  @include angular-material-theme($purple-green-theme);
  @include custom-components-theme($purple-green-theme);
}

.bluegrey-lightgreen-theme {
  @include angular-material-theme($bluegrey-lightgreen-theme);
  @include custom-components-theme($bluegrey-lightgreen-theme);
}

.blue-lightblue-theme {
  @include angular-material-theme($blue-lightblue-theme);
  @include custom-components-theme($blue-lightblue-theme);
}

.deeporange-indigo-theme {
  @include angular-material-theme($deeporange-indigo-theme);
  @include custom-components-theme($deeporange-indigo-theme);
}

.close-dialog {
  float: right;
  margin-top: 15px;
  width: fit-content;
}

[hidden] {
  display: none !important;
}

.mat-expansion-panel-header {
  // If the panel, that the header is in, is inside an element being animated by Angular,
  // the default behavior is to block all child animations. This means that the header's
  // height won't kick in until the parent animation is done. We add a fallback to the
  // header's default height. If the animations aren't blocked, these styles will be overridden
  // by the inline styles from the animations module.
  .ng-animating .mat-expansion-panel & {
    min-height: 48px;
  }

  .ng-animating .mat-expansion-panel.mat-expanded & {
    min-height: 64px;
  }
}

.mat-expansion-panel-content {
  // If the expansion panel is inside an element being animated by Angular,
  // the default behavior is to block all child animations. This means that the
  // default `height: 0` won't kick in until the parent animation is over, which
  // will cause the panel to appear open, before it snaps into place. We don't want
  // to set the default height to zero, because it'll break the `height: '*'` from
  // the animation definitions. Instead we add a fallback that only applies only if
  // it's inside a parent that is mid-animation.
  .ng-animating .mat-expansion-panel:not(.mat-expanded) & {
    height: 0;
    overflow: hidden;
  }
}

#hacking-instructor code {
  background-color: $bg-hacking-instructor;
  border-radius: 1px;
  font-family: monospace;
  padding: 0 4px;
}
